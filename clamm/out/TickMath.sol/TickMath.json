{"abi":[],"bytecode":{"object":"0x6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212207dfe9dddd44f3e9b720c89e2c9b0877bd3e051a78183acdda23597f99d72697264736f6c634300081c0033","sourceMap":"357:9027:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212207dfe9dddd44f3e9b720c89e2c9b0877bd3e051a78183acdda23597f99d72697264736f6c634300081c0033","sourceMap":"357:9027:2:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"MAX_SQRT_RATIO\":{\"details\":\"The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\"},\"MAX_TICK\":{\"details\":\"The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\"},\"MIN_SQRT_RATIO\":{\"details\":\"The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\"},\"MIN_TICK\":{\"details\":\"The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\"}},\"title\":\"Math library for computing sqrt prices from ticks and vice versa\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/TickMath.sol\":\"TickMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/lib/TickMath.sol\":{\"keccak256\":\"0x221570ba5a1f86e5f79c2e1a7fe273bafb4528ba074a37b926dcc0e7e77b9f24\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1029fc8a1c05dd5d7eebbb2a83d1ea8031efb431633ca773e8cc88ca4f770cbc\",\"dweb:/ipfs/QmcNTzakE8hFD4ioF4ShJBJaWh1C4eng1W3jAgMg2AoLTw\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/lib/TickMath.sol":"TickMath"},"evmVersion":"cancun","libraries":{}},"sources":{"src/lib/TickMath.sol":{"keccak256":"0x221570ba5a1f86e5f79c2e1a7fe273bafb4528ba074a37b926dcc0e7e77b9f24","urls":["bzz-raw://1029fc8a1c05dd5d7eebbb2a83d1ea8031efb431633ca773e8cc88ca4f770cbc","dweb:/ipfs/QmcNTzakE8hFD4ioF4ShJBJaWh1C4eng1W3jAgMg2AoLTw"],"license":"GPL-2.0-or-later"}},"version":1},"id":2}